// <auto-generated />
using System;
using GuardsEarnings_DAL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GuardsEarnings_DAL.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20230413084221_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("GuardsEarnings_DAL.Models.Guard", b =>
                {
                    b.Property<long>("GuardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("GuardId"), 1L, 1);

                    b.Property<string>("Cellphone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GuardId");

                    b.ToTable("Guards");
                });

            modelBuilder.Entity("GuardsEarnings_DAL.Models.Journey", b =>
                {
                    b.Property<long>("JourneyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("JourneyId"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.HasKey("JourneyId");

                    b.ToTable("Journeys");
                });

            modelBuilder.Entity("GuardsEarnings_DAL.Models.Target", b =>
                {
                    b.Property<long>("TargetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("TargetId"), 1L, 1);

                    b.Property<string>("Direction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Payment")
                        .HasColumnType("real");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TargetId");

                    b.ToTable("Targets");
                });

            modelBuilder.Entity("GuardsEarnings_DAL.Models.Work", b =>
                {
                    b.Property<long>("WorkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("WorkId"), 1L, 1);

                    b.Property<float>("QtyHours")
                        .HasColumnType("real");

                    b.HasKey("WorkId");

                    b.ToTable("Works");
                });

            modelBuilder.Entity("GuardWork", b =>
                {
                    b.Property<long>("GuardsGuardId")
                        .HasColumnType("bigint");

                    b.Property<long>("WorksWorkId")
                        .HasColumnType("bigint");

                    b.HasKey("GuardsGuardId", "WorksWorkId");

                    b.HasIndex("WorksWorkId");

                    b.ToTable("GuardWork");
                });

            modelBuilder.Entity("JourneyWork", b =>
                {
                    b.Property<long>("JourneysJourneyId")
                        .HasColumnType("bigint");

                    b.Property<long>("WorksWorkId")
                        .HasColumnType("bigint");

                    b.HasKey("JourneysJourneyId", "WorksWorkId");

                    b.HasIndex("WorksWorkId");

                    b.ToTable("JourneyWork");
                });

            modelBuilder.Entity("TargetWork", b =>
                {
                    b.Property<long>("TargetsTargetId")
                        .HasColumnType("bigint");

                    b.Property<long>("WorksWorkId")
                        .HasColumnType("bigint");

                    b.HasKey("TargetsTargetId", "WorksWorkId");

                    b.HasIndex("WorksWorkId");

                    b.ToTable("TargetWork");
                });

            modelBuilder.Entity("GuardWork", b =>
                {
                    b.HasOne("GuardsEarnings_DAL.Models.Guard", null)
                        .WithMany()
                        .HasForeignKey("GuardsGuardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GuardsEarnings_DAL.Models.Work", null)
                        .WithMany()
                        .HasForeignKey("WorksWorkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("JourneyWork", b =>
                {
                    b.HasOne("GuardsEarnings_DAL.Models.Journey", null)
                        .WithMany()
                        .HasForeignKey("JourneysJourneyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GuardsEarnings_DAL.Models.Work", null)
                        .WithMany()
                        .HasForeignKey("WorksWorkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TargetWork", b =>
                {
                    b.HasOne("GuardsEarnings_DAL.Models.Target", null)
                        .WithMany()
                        .HasForeignKey("TargetsTargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GuardsEarnings_DAL.Models.Work", null)
                        .WithMany()
                        .HasForeignKey("WorksWorkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
